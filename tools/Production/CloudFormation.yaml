AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

Description: Schedy Hermes Api

Parameters:

  Environment:
    Type: String
    Description: Set the deployment environment.
    AllowedValues:
      - Development
      - Staging
      - Production

  JwtSecret:
    Type: String
    Description: Set secret token JWT

Mappings:
  StageNameMap:
    Development:
      StageName: dev
    Staging:
      StageName: stg
    Production:
      StageName: prod
  EnvironmentToPathBaseMap:
    Development:
      PathBase: /development
    Staging:
      PathBase: /staging
    Production:
      PathBase: /

Globals:
  Api:
    OpenApiVersion: 3.0.1

Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: schedy-hermes-api
      Handler: Schedy.Hermes.Api::Schedy.Hermes.Api.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnet6
      MemorySize: 1024
      Timeout: 30
      Environment:
        Variables:
          ASPNETCORE_ENVIRONMENT: !Ref Environment
          ASPNETCORE_JWT__Secret: !Ref JwtSecret
          ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: true
          ASPNETCORE_PATH_BASE: !FindInMap [EnvironmentToPathBaseMap, !Ref Environment, PathBase]
          ASPNETCORE_Logging__IncludeLogLevel: true
          ASPNETCORE_Logging__IncludeCategory: true
          ASPNETCORE_Logging__IncludeNewline: true
          ASPNETCORE_Logging__IncludeException: true
          ASPNETCORE_Logging__IncludeEventId: false
          ASPNETCORE_Logging__IncludeScopes: false
          ASPNETCORE_Logging__LogLevel__Default: Information
          ASPNETCORE_Logging__LogLevel__Microsoft: Warning
          ASPNETCORE_Logging__LogLevel__System: Warning
      Events:
        AnyHttpRequest:
          Type: Api
          Properties:
            Path: "/{proxy+}"
            Method: ANY
            RestApiId: !Ref ApiGateway
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/AppLambdaExecutionRole
      Tags:
        Name: schedy-hermes-api:Lambda

  ApiGateway:
    Type: AWS::Serverless::Api

    Properties:
      StageName: !FindInMap [StageNameMap, !Ref Environment, StageName]
      Name: schedy-hermes-api
      Tags:
        Name: schedy-hermes-api:ApiGateway

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: schedy-hermes
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSIPK
          AttributeType: S
        - AttributeName: GSISK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: GSIIndex
        KeySchema:
        - AttributeName: GSIPK
          KeyType: HASH
        - AttributeName: GSISK
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      Tags:
        - Key: Name
          Value: schedy-hermes-api:DynamoDB

  # SQS Queues
  CreateCustomerQueueHermes:
    Type: 'AWS::SQS::Queue'
    Properties:
      DelaySeconds: 0 
      QueueName: 'CreateCustomerHermes'
      VisibilityTimeout: 30

  UpdateCustomerQueueHermes:
    Type: 'AWS::SQS::Queue'
    Properties:
      DelaySeconds: 0 
      QueueName: 'UpdateCustomerHermes'
      VisibilityTimeout: 30

  CreateScheduleQueueHermes:
    Type: 'AWS::SQS::Queue'
    Properties:
      DelaySeconds: 0 
      QueueName: 'CreateScheduleHermes'
      VisibilityTimeout: 30

  UpdateScheduleQueueHermes:
    Type: 'AWS::SQS::Queue'
    Properties:
      DelaySeconds: 0 
      QueueName: 'UpdateScheduleHermes'
      VisibilityTimeout: 30

  CreateWaitingListQueueHermes:
    Type: 'AWS::SQS::Queue'
    Properties:
      DelaySeconds: 0 
      QueueName: 'CreateWaitingListHermes'
      VisibilityTimeout: 30

  # SNS Topics
  CreateCustomerTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: 'CreateCustomer'
      TopicName: 'CreateCustomer'

  UpdateCustomerTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: 'UpdateCustomer'
      TopicName: 'UpdateCustomer'

  CreateScheduleTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: 'CreateSchedule'
      TopicName: 'CreateSchedule'

  UpdateScheduleTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: 'UpdateSchedule'
      TopicName: 'UpdateSchedule'

  CreateWaitingListTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: 'CreateWaitingList'
      TopicName: 'CreateWaitingList'

  # Subscriptions
  CreateCustomerSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Protocol: 'sqs'
      TopicArn: !Ref CreateCustomerTopic
      Endpoint: !GetAtt CreateCustomerQueueHermes.Arn
      RawMessageDelivery: 'true'

  UpdateCustomerSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Protocol: 'sqs'
      TopicArn: !Ref UpdateCustomerTopic
      Endpoint: !GetAtt UpdateCustomerQueueHermes.Arn
      RawMessageDelivery: 'true'

  CreateScheduleSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Protocol: 'sqs'
      TopicArn: !Ref CreateScheduleTopic
      Endpoint: !GetAtt CreateScheduleQueueHermes.Arn
      RawMessageDelivery: 'true'

  UpdateScheduleSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Protocol: 'sqs'
      TopicArn: !Ref UpdateScheduleTopic
      Endpoint: !GetAtt UpdateScheduleQueueHermes.Arn
      RawMessageDelivery: 'true'

  CreateWaitingListSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Protocol: 'sqs'
      TopicArn: !Ref CreateWaitingListTopic
      Endpoint: !GetAtt CreateWaitingListQueueHermes.Arn
      RawMessageDelivery: 'true'

  # Generic SQS policy to allow any SNS to send messages
  SQSPolicyForAllSNS:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      Queues:
        - !Ref CreateCustomerQueueHermes
        - !Ref UpdateCustomerQueueHermes
        - !Ref CreateScheduleQueueHermes
        - !Ref UpdateScheduleQueueHermes
        - !Ref CreateWaitingListQueueHermes
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'sns.amazonaws.com'
            Action: 'sqs:SendMessage'
            Resource:
              - !GetAtt CreateCustomerQueueHermes.Arn
              - !GetAtt UpdateCustomerQueueHermes.Arn
              - !GetAtt CreateScheduleQueueHermes.Arn
              - !GetAtt UpdateScheduleQueueHermes.Arn
              - !GetAtt CreateWaitingListQueueHermes.Arn
